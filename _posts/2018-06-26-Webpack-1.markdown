---
layout: post
title:  "Webpack 1일차 - npm, webpack"
date:   2018-06-26 22:13:00
author: 이상현
categories: Webpack
---

# npm 설명
## install --save와 --save-dev
<p>
--save는 앱 구동시에 필요한 것들이다. ex) react, vue <br/>
--save-dev는 개발시에 필요한 것들이다. ex) live reload, dev tools, testing tools <br/>
--save를 하면 package.json에 디펜던시가 추가된다.
</p>

# webpack.config.js
## entry, output
<img src="{{ site.baseurl }}/assets/postImages/20180626/entry.png"> <br>
<p>
entry는 번들링할 파일의 시작점이고, output은 번들링해서 나올 결과물의 이름 위치 등이다. </br>
entry를 위와 같이 상황에 맞게 설정할 수 있다.
</p>

## output name options
<img src="{{ site.baseurl }}/assets/postImages/20180626/output.png"> <br>

## loader
```js
module.exports = {
  entry: {

  },
  output: {

  },
  module: {
    rules: [
      { test: /\.css$/, use: ['style-loader', 'css-loader'] },
      {
        test: /backbone/,
        use: [
          'expose-loader?Backbone',
          'imports-loader?_=underscore,jquery'
          // 오른쪽부터 순서대로 (1)jquery, (2)underscore가 로딩된다.
        ]
      }
    ]
  }
}
```
<p>
로더를 이용하여 다른 형태의 웹 자원들을(img, css, scss) js로 변환하여 로딩한다.
</p>

## Babel Loader - ES6
```js
module.exports = {
  entry: {

  },
  output: {

  },
  module: {
    rules: [
      {
        test: /\.js$/,
        use: [{
          loader: 'babel-loader',
          options: {
            preset: [
              ['es2015', 'react', {modules: false}]
            ]
          }
        }]
      }
    ]
  }
}
```
<p>
바벨이 필요한 이유는 ES6가 브라우저에서 잘 호환이되지 않으므로, 모든 브라우저에서 호환이 가능하게끔 변환해주는 로더(컴파일러)이다. <br/>
.babelrc로 preset을 뺄 수도 있다.
</p>
